import{c as t,f as s,g as f,h as R,i as T,j as i}from"../../../_chunks/chunk-7V7WNOD5.js";var I=s(i(),1);var x=s(i(),1);var L=s(i(),1),y=(e=>(e[e.Pending=1]="Pending",e[e.In_Progress=2]="In_Progress",e[e.Completed=3]="Completed",e))(y||{});L.Decorators.registerEnumType(y,"ToDoApp.Modules.TaskDB.Task.Status","TaskDB.Status");var u=class u extends x.ColumnsBase{};t(u,"TaskColumns"),u.columnsKey="TaskDB.Task",u.Fields=(0,x.fieldsProxy)();var k=u;var r=s(i(),1);var A=s(i(),1),B=(e=>(e[e.Low=1]="Low",e[e.Medium=2]="Medium",e[e.High=3]="High",e))(B||{});A.Decorators.registerEnumType(B,"ToDoApp.Modules.TaskDB.Task.Priority","TaskDB.Priority");var n=class n extends r.PrefixedContext{constructor(C){if(super(C),!n.init){n.init=!0;var a=r.StringEditor,e=r.TextAreaEditor,D=r.EnumEditor,E=r.DateEditor;(0,r.initFormType)(n,["Title",a,"Description",e,"Status",D,"Priority",D,"DueDate",E])}}};t(n,"TaskForm"),n.formKey="TaskDB.Task";var l=n;var U=s(i(),1);var o=class o{};t(o,"TaskRow"),o.idProperty="TaskId",o.nameProperty="Title",o.localTextPrefix="TaskDB.Task",o.deletePermission="Administration:General",o.insertPermission="Administration:General",o.readPermission="Administration:General",o.updatePermission="Administration:General",o.Fields=(0,U.fieldsProxy)();var p=o;var b=s(i(),1),m;(a=>(a.baseUrl="TaskDB/Task",a.Methods={Create:"TaskDB/Task/Create",Update:"TaskDB/Task/Update",Delete:"TaskDB/Task/Delete",Retrieve:"TaskDB/Task/Retrieve",List:"TaskDB/Task/List"},["Create","Update","Delete","Retrieve","List"].forEach(e=>{a[e]=function(D,E,M){return(0,b.serviceRequest)(a.baseUrl+"/"+e,D,E,M)}})))(m||(m={}));var P=s(i(),1);var S=s(i(),1);var K,q,F;K=[S.Decorators.registerClass("ToDoApp.TaskDB.TaskDialog")];var c=class c extends(F=S.EntityDialog){constructor(){super(...arguments);this.form=new l(this.idPrefix)}getFormKey(){return l.formKey}getRowDefinition(){return p}getService(){return m.baseUrl}};q=f(F),c=T(q,0,"TaskDialog",K,c),t(c,"TaskDialog"),R(q,1,c);var v=c;var O,w,G;O=[P.Decorators.registerClass("ToDoApp.TaskDB.TaskGrid")];var d=class d extends(G=P.EntityGrid){getColumnsKey(){return k.columnsKey}getDialogType(){return v}getRowDefinition(){return p}getService(){return m.baseUrl}};w=f(G),d=T(w,0,"TaskGrid",O,d),t(d,"TaskGrid"),R(w,1,d);var g=d;var ve=t(()=>(0,I.gridPageInit)(g),"default");export{ve as default};
//# sourceMappingURL=TaskPage.js.map
